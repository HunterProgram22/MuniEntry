from munientry.data.cms_case_loaders import CmsNoChargeLoader as CmsNoChargeLoader
from munientry.controllers.signal_connectors import BondHearingDialogSignalConnector as BondHearingDialogSignalConnector
from munientry.controllers.view_modifiers import BondHearingDialogViewModifier as BondHearingDialogViewModifier
from munientry.updaters.no_grid_case_updaters import BondHearingDialogUpdater as BondHearingDialogUpdater
from munientry.views.bond_hearing_dialog_ui import Ui_BondHearingDialog as Ui_BondHearingDialog
from munientry.views.diversion_plea_dialog_ui import Ui_DiversionPleaDialog as Ui_DiversionPleaDialog
from munientry.views.failure_to_appear_dialog_ui import Ui_FailureToAppearDialog as Ui_FailureToAppearDialog
from munientry.views.fine_only_plea_dialog_ui import Ui_FineOnlyPleaDialog as Ui_FineOnlyPleaDialog
from munientry.views.jail_cc_plea_dialog_ui import Ui_JailCCPleaDialog as Ui_JailCCPleaDialog
from munientry.views.no_plea_bond_dialog_ui import Ui_NoPleaBondDialog as Ui_NoPleaBondDialog
from munientry.views.not_guilty_bond_dialog_ui import Ui_NotGuiltyBondDialog as Ui_NotGuiltyBondDialog
from munientry.views.plea_only_dialog_ui import Ui_PleaOnlyDialog as Ui_PleaOnlyDialog
from munientry.views.probation_violation_bond_dialog_ui import Ui_ProbationViolationBondDialog as Ui_ProbationViolationBondDialog
from typing import Any

from stubs.package.controllers.base_dialogs import CriminalBaseDialog


class DiversionPleaDialog(CriminalBaseDialog, Ui_DiversionPleaDialog):
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def load_cms_data_to_view(self): ...
    def update_entry_case_information(self): ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class PleaOnlyDialog(CriminalBaseDialog, Ui_PleaOnlyDialog):
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def load_cms_data_to_view(self): ...
    def update_entry_case_information(self): ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class JailCCPleaDialog(CriminalBaseDialog, Ui_JailCCPleaDialog):
    validator: Any
    additional_conditions_list: Any
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def load_cms_data_to_view(self): ...
    def update_entry_case_information(self): ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class FineOnlyPleaDialog(CriminalBaseDialog, Ui_FineOnlyPleaDialog):
    additional_conditions_list: Any
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def load_cms_data_to_view(self): ...
    def update_entry_case_information(self): ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class NotGuiltyBondDialog(CriminalBaseDialog, Ui_NotGuiltyBondDialog):
    condition_checkbox_dict: Any
    additional_conditions_list: Any
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def load_cms_data_to_view(self): ...
    def update_entry_case_information(self): ...
    def add_charge_to_grid(self) -> None: ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class NoPleaBondDialog(CriminalBaseDialog, Ui_NoPleaBondDialog):
    condition_checkbox_dict: Any
    additional_conditions_list: Any
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def update_entry_case_information(self): ...
    def load_cms_data_to_view(self): ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class ProbationViolationBondDialog(CriminalBaseDialog, Ui_ProbationViolationBondDialog):
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def load_cms_data_to_view(self): ...
    def update_entry_case_information(self): ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class FailureToAppearDialog(CriminalBaseDialog, Ui_FailureToAppearDialog):
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer, cms_case: Any | None = ..., case_table: Any | None = ..., parent: Any | None = ...) -> None: ...
    def modify_view(self): ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self): ...
    def load_cms_data_to_view(self): ...
    def update_entry_case_information(self): ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...

class BondHearingDialog(CriminalBaseDialog, Ui_BondHearingDialog):
    condition_checkbox_dict: Any
    additional_conditions_list: Any
    dialog_name: str
    template: Any
    def __init__(self, judicial_officer: object, cms_case: str = ..., case_table: str = ..., parent: object = ...) -> None: ...
    def modify_view(self) -> BondHearingDialogViewModifier: ...
    functions: Any
    def create_dialog_slot_functions(self) -> None: ...
    def connect_signals_to_slots(self) -> BondHearingDialogSignalConnector: ...
    def load_cms_data_to_view(self) -> CmsNoChargeLoader: ...
    def update_entry_case_information(self) -> BondHearingDialogUpdater: ...
    dialog_checks: Any
    def perform_info_checks(self) -> None: ...
