from package.views.custom_widgets import JailWarningBox as JailWarningBox, RequiredBox as RequiredBox, TwoChoiceQuestionBox as TwoChoiceQuestionBox, WarningBox as WarningBox
from typing import Any

def check_judicial_officer(func): ...
def check_case_list_selected(func): ...

class BaseInfoChecker:
    view: Any
    grid: Any
    def __init__(self, dialog) -> None: ...
    def perform_check_list(self): ...
    def check_defense_counsel(self): ...
    def set_defense_counsel_waived_or_fail_check(self, message_response): ...
    def check_if_no_plea_entered(self): ...
    def check_if_no_finding_entered(self): ...
    def check_insurance(self): ...
    def set_fra_in_court_box(self, message_response): ...
    def check_additional_conditions_ordered(self): ...
    def check_if_no_bond_amount(self): ...
    def check_if_improper_bond_type(self): ...

class PleaOnlyDialogInfoChecker(BaseInfoChecker):
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...

class FineOnlyDialogInfoChecker(BaseInfoChecker):
    conditions_list: Any
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...

class NotGuiltyBondDialogInfoChecker(BaseInfoChecker):
    conditions_list: Any
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...
    def check_domestic_violence_bond_condition(self): ...

class NoPleaBondDialogInfoChecker(BaseInfoChecker):
    conditions_list: Any
    view: Any
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...
    def check_domestic_violence_bond_condition(self): ...

class BondHearingDialogInfoChecker(BaseInfoChecker):
    conditions_list: Any
    view: Any
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...
    def check_if_no_bond_modification_decision(self): ...
    def check_domestic_violence_bond_condition(self): ...

class DiversionDialogInfoChecker(BaseInfoChecker):
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...
    def check_if_diversion_program_selected(self): ...

class JailCCPleaDialogInfoChecker(BaseInfoChecker):
    conditions_list: Any
    case_info: Any
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...
    def check_dv_and_victim_notifications_ordered(self) -> None: ...
    def check_jail_time_credit_fields(self): ...
    def check_if_days_in_jail_blank(self): ...
    def check_if_currently_in_jail_blank(self): ...
    def set_in_jail_box(self, message_response) -> None: ...
    def check_if_apply_jtc_blank(self): ...
    def set_jtc_apply_box(self, message_response) -> None: ...
    def calculate_jail_days_credit(self): ...
    def check_if_jail_days_suspended_greater_than_jail_imposed(self): ...
    def check_if_jail_days_imposed_greater_than_suspended_and_credit(self): ...
    def add_jail_reporting_terms(self, message_response): ...
    def check_if_jail_days_equals_suspended_and_imposed_days(self): ...
    def unset_jail_reporting_terms(self, message_response): ...
    def check_if_jails_days_left_and_defendant_in_jail_and_reporting_ordered(self): ...
    def check_if_jtc_applied_to_sentence_is_greater_than_jail_imposed(self): ...

class ProbationViolationBondDialogInfoChecker(BaseInfoChecker):
    view: Any
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...

class FailureToAppearDialogInfoChecker(BaseInfoChecker):
    view: Any
    dialog_check_list: Any
    check_status: Any
    def __init__(self, dialog) -> None: ...
